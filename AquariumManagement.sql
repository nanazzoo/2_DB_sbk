
-- 멤버 테이블

-- 테이블 삭제
DROP TABLE AR_MEMBER; 
DROP TABLE AR_TANK;
DROP TABLE AR_LIVESTOCK;
DROP TABLE AR_PARAMETER;
DROP TABLE AR_TODO_LIST;
DROP TABLE AR_BREEDING;
DROP TABLE AR_BR_EVENT;
DROP TABLE AR_BOARD;
DROP TABLE AR_COMMENT;

-- 조회
SELECT * FROM AR_MEMBER;

-- MEMBER_NO 시퀀스 생성
CREATE SEQUENCE SEQ_MEMBER_NO;
DROP SEQUENCE SEQ_MEMBER_NO;

CREATE SEQUENCE SEQ_EVENT_NO;
DROP SEQUENCE SEQ_EVENT_NO;

CREATE SEQUENCE SEQ_BOARD_NO;
DROP SEQUENCE SEQ_BOARD_NO;

CREATE SEQUENCE SEQ_COMMENT_NO;
DROP SEQUENCE SEQ_COMMENT_NO;





-- 회원 샘플 테이터 삽입
INSERT INTO AR_MEMBER 
VALUES(SEQ_MEMBER_NO.NEXTVAL, 'user01', 'pass01', '유저일', DEFAULT);
INSERT INTO AR_MEMBER 
VALUES(SEQ_MEMBER_NO.NEXTVAL, 'user02', 'pass02', '유저이', DEFAULT);
INSERT INTO AR_MEMBER 
VALUES(SEQ_MEMBER_NO.NEXTVAL, 'user03', 'pass03', '유저삼', DEFAULT);
INSERT INTO AR_MEMBER 
VALUES(SEQ_MEMBER_NO.NEXTVAL, 'user04', 'pass04', '유저사', DEFAULT);
INSERT INTO AR_MEMBER 
VALUES(SEQ_MEMBER_NO.NEXTVAL, 'user05', 'pass05', '유저오', DEFAULT);

-------------------------------------------------------------------------

-- 어항 정보 테이블 생성

-- 테이블 삭제


-- 테이블 조회
SELECT * FROM AR_TANK;

ROLLBACK;

SELECT TANK_NO, TANK_NAME
		FROM AR_TANK
		WHERE MEMBER_NO = 1;

	
-- 어항 샘플 데이터 생성
	
INSERT INTO AR_TANK 
VALUES(1, 1, '내어항1', DEFAULT, '45큐브', 'K7 PRO', '하단섬프', '제오박, CV', '산호사', DEFAULT);
INSERT INTO AR_TANK 
VALUES(1, (SELECT MAX(TANK_NO) FROM AR_TANK WHERE MEMBER_NO = '1')+1, '내어항2', DEFAULT, '35큐브', '썬라이트', '내부배면', '마이크로박터', '산호사', DEFAULT);
INSERT INTO AR_TANK 
VALUES(2, 1, '내어항1', DEFAULT, '60큐브', '라데온', '하단섬프', '제오박, CV', '산호사', DEFAULT);
INSERT INTO AR_TANK 
VALUES(2, (SELECT MAX(TANK_NO) FROM AR_TANK WHERE MEMBER_NO = '2')+1, '내어항2', DEFAULT, '4자어항', '오펙', '하단섬프', '제오빗 시스템', 'KZ 아라고나이트', DEFAULT);
INSERT INTO AR_TANK 
VALUES(3, 1, '내어항1', DEFAULT, '2자', 'K7 PRO', '하단섬프', '마이크로박터, 바이오퓨엘', '다크캐러빅', DEFAULT);


SELECT MAX(TANK_NO) FROM AR_TANK WHERE MEMBER_NO = '3'

SELECT MAX(TANK_NO)
		FROM AR_TANK
		WHERE MEMBER_NO = 5
		AND DELETE_FL = 'N';


------------------------------------------------------------------------------------------

-- 생물 테이블 생성

-- 생물 테이블 삭제
--DROP TABLE AR_LIVESTOCK;


SELECT * FROM AR_LIVESTOCK;


-- 생물 샘플 데이터 삽입
INSERT INTO AR_LIVESTOCK 
VALUES(1, 1, 1, '물고기', '니모', 10000, 'F', SYSDATE, DEFAULT, DEFAULT);
INSERT INTO AR_LIVESTOCK 
VALUES(1, 2, 1, '물고기', '옐로우탱', 60000, NULL, SYSDATE, DEFAULT, DEFAULT);
INSERT INTO AR_LIVESTOCK 
VALUES(1, 2, 2, '물고기', '블루탱', 45000, NULL, SYSDATE, DEFAULT, DEFAULT);

INSERT INTO AR_LIVESTOCK 
VALUES(2, 2, 1, '물고기', '블루탱', 45000, NULL, TO_DATE('2022-09-03', 'YYYY-MM-DD'), DEFAULT, DEFAULT);

-- 시퀀스 사용 X 서브쿼리로 제일 큰 TANK_NO + 1  이런 식으로
SELECT MAX(TANK_NO) FROM AR_TANK WHERE MEMBER_NO = '2' +1


SELECT LIVESTOCK_NO, LIVESTOCK_SPECIES , LIVESTOCK_NM 
, LIVESTOCK_PRICE, LIVESTOCK_GENDER , TO_CHAR(DATE_OF_PURCHASE, 'YYYY-MM-DD') 
FROM AR_LIVESTOCK
WHERE MEMBER_NO = 1 AND TANK_NO = 1 AND LIFE_OR_DIE_FL = 'L';

SELECT MAX(LIVESTOCK_NO)
		FROM AR_LIVESTOCK
		WHERE MEMBER_NO = 1
		AND TANK_NO = 1;

SELECT MAX(LIVESTOCK_NO)
		FROM AR_LIVESTOCK
		WHERE MEMBER_NO = 1 AND TANK_NO = 1;
	
	
UPDATE AR_LIVESTOCK SET
LIVESTOCK_NM = ''
WHERE MEMBER_NO = 1
AND TANK_NO = 1;
	
------------------------------------------------------------------------------

-- 물성치 테이블 생성

DROP TABLE AR_PARAMETER;

CREATE SEQUENCE SEQ_PARAMETER_NO;
DROP SEQUENCE SEQ_PARAMETER_NO;

SELECT * FROM AR_PARAMETER
ORDER BY REG_DATE DESC;

-- 샘플 데이터 삽입
INSERT INTO AR_PARAMETER
VALUES(1, 1, SEQ_PARAMETER_NO.NEXTVAL, 26, 10, 0.01, 7.4, 400, 1350, DEFAULT, DEFAULT);

INSERT INTO AR_PARAMETER
VALUES(1, 1, SEQ_PARAMETER_NO.NEXTVAL, 26, 12, 0.01, 7.6, 410, 1300, SYSDATE -1, DEFAULT);

DELETE FROM AR_PARAMETER;

----------------------------------------------------------------------------------

-- 할 일 테이블 생성

--DROP TABLE AR_TODO_LIST;


SELECT * FROM AR_TODO_LIST;

SELECT TODO_NO , TODO_CONTENT, TO_CHAR(REG_DATE)
		FROM AR_TODO_LIST
		WHERE MEMBER_NO = 7
		AND TANK_NO = 1
		AND CONCLUDED_FL = 'Y'
		AND DELETE_FL = 'N'
		ORDER BY TODO_TERM

-- 샘플 데이터 삽입
INSERT INTO AR_TODO_LIST VALUES(1, 1, 1, '어항 환수하기', SYSDATE - 3, SYSDATE+4, DEFAULT, DEFAULT, NULL);
INSERT INTO AR_TODO_LIST VALUES(1, 1, 2, '물고기 밥주기', DEFAULT, DEFAULT, DEFAULT, DEFAULT, NULL);
INSERT INTO AR_TODO_LIST VALUES(2, 1, 1, '어항 청소하기', SYSDATE - 3, SYSDATE+4, DEFAULT, DEFAULT, NULL);
INSERT INTO AR_TODO_LIST VALUES(2, 2, 1, '양말필터 갈기', DEFAULT, DEFAULT, DEFAULT, DEFAULT, NULL);
INSERT INTO AR_TODO_LIST VALUES(3, 1, 1, '수류모터 청소하기', SYSDATE - 3, SYSDATE+4, DEFAULT, DEFAULT, NULL);
INSERT INTO AR_TODO_LIST VALUES(3, 1, 2, '어항 환수하기', DEFAULT, DEFAULT, DEFAULT, DEFAULT, NULL);

INSERT INTO AR_TODO_LIST VALUES(1, 1, 3, '수류모터 청소하기', SYSDATE-3, SYSDATE+4, 'Y', DEFAULT, SYSDATE);
INSERT INTO AR_TODO_LIST VALUES(1, 1, 4, '어항 환수하기', DEFAULT, DEFAULT, 'Y', DEFAULT, SYSDATE);
INSERT INTO AR_TODO_LIST VALUES(1, 1, 6, '어항 환수하기', SYSDATE-4, SYSDATE-1, 'N', DEFAULT, NULL);
INSERT INTO AR_TODO_LIST VALUES(2, 2, 3, '어항 환수하기', SYSDATE-4, SYSDATE-2, 'N', DEFAULT, NULL);





-- 브리딩 테이블
SELECT * FROM AR_BREEDING

--샘플 데이터 삽입
INSERT INTO AR_BREEDING 
VALUES(1, 1, '오셀라리스 크라운', 1, '오렌지스톰 크라운', 2, SYSDATE, DEFAULT, DEFAULT);

INSERT INTO AR_BREEDING
VALUES(1, 2, '다이아몬드 고비', 2, '다이아몬드 고비', 2, SYSDATE-5, DEFAULT, DEFAULT);



ALTER TABLE AQUARIUM.AR_BREEDING MODIFY BREED_SPECIES VARCHAR2(50);


-- 브리딩 테이블 sql

SELECT BREEDING_NO , BREED_SPECIES1, FROM_TANK_NO1, BREED_SPECIES2,
	FROM_TANK_NO2, START_DATE 
FROM AR_BREEDING
WHERE MEMBER_NO = 1
AND BREEDING_NO = 1;

-----------------------------------------------------------------------


-- 브리딩 코멘트 테이블
SELECT * FROM AR_BR_EVENT;

INSERT INTO AR_BR_EVENT
VALUES(1, 1, SEQ_EVENT_NO.NEXTVAL, '니모 산란', SYSDATE-5, DEFAULT);

INSERT INTO AR_BR_EVENT 
VALUES(1, 1, SEQ_EVENT_NO.NEXTVAL, '니모 알 부화', SYSDATE-2, DEFAULT);

INSERT INTO AR_BR_EVENT 
VALUES(1, 1, SEQ_EVENT_NO.NEXTVAL, '니모 치어 3일차', SYSDATE, DEFAULT);

DELETE FROM AR_BR_EVENT;


CREATE SEQUENCE SEQ_EVENT_NO;
DROP SEQUENCE SEQ_EVENT_NO;




SELECT BREEDING_NO, EVENT_NO, EVENT_CONTENT
			, TO_CHAR(REG_DATE, 'YYYY-MM-DD') REG_DATE
		FROM AR_BR_EVENT
		WHERE DELETE_FL = 'N'
		AND MEMBER_NO = 1
		AND BREEDING_NO = 1
		ORDER BY EVENT_NO DESC


UPDATE AR_BR_EVENT SET
EVENT_CONTENT = ''
WHERE EVENT_NO = 1
		
		
-- 브리딩 테이블 SLQ

--브리딩 목록 조회
SELECT BREEDING_NO , BREED_SPECIES , START_DATE 
FROM AR_BREEDING
WHERE MEMBER_NO = 1;

--------------------------------------------------------------------




-- 어항 정보 수정
UPDATE AR_TANK SET
TANK_NAME  = '유저일의 어항1'
WHERE TANK_NO = 1 AND MEMBER_NO = 1;


SELECT COUNT(*)
		FROM AR_PARAMETER
		WHERE MEMBER_NO = 1
		AND TANK_NO = 1;



SELECT  P.TANK_NO , TO_CHAR(A.REG_DATE), P.PARAM_TEMP,
	P.PARAM_NO3 , P.PARAM_PO4 , P.PARAM_KH ,P."PARAM_Ca" , P."PARAM_Mg"
FROM (SELECT ROW_NUMBER() OVER(ORDER BY REG_DATE DESC) AS rownumber, MEMBER_NO, TANK_NO, 
	REG_DATE, PARAM_TEMP,
	PARAM_NO3 , PARAM_PO4 , PARAM_KH ,"PARAM_Ca" , "PARAM_Mg"
	FROM AR_PARAMETER
	WHERE MEMBER_NO = 1
	AND TANK_NO = 1
	AND DELETE_FL = 'N') P
JOIN AR_PARAMETER A ON(P.REG_DATE = A.REG_DATE)
WHERE P.rownumber <= 3
;

SELECT ROW_NUMBER() OVER(ORDER BY REG_DATE DESC) AS rownumber, MEMBER_NO, TANK_NO, 
	REG_DATE, PARAM_TEMP,
	PARAM_NO3 , PARAM_PO4 , PARAM_KH ,"PARAM_Ca" , "PARAM_Mg"
	FROM AR_PARAMETER
	WHERE MEMBER_NO = 1
	AND TANK_NO = 1
	AND DELETE_FL = 'N';

SELECT  P.TANK_NO , TO_CHAR(A.REG_DATE), P.PARAM_TEMP,
			P.PARAM_NO3 , P.PARAM_PO4 , P.PARAM_KH ,P."PARAM_Ca" , P."PARAM_Mg"
		FROM (SELECT ROW_NUMBER() OVER(ORDER BY REG_DATE DESC) AS rownumber, MEMBER_NO, TANK_NO, 
			REG_DATE, PARAM_TEMP,
			PARAM_NO3 , PARAM_PO4 , PARAM_KH ,"PARAM_Ca" , "PARAM_Mg"
			FROM AR_PARAMETER
			WHERE MEMBER_NO = 1
			AND TANK_NO = 1
			AND DELETE_FL = 'N') P
		JOIN AR_PARAMETER A ON(P.REG_DATE = A.REG_DATE)
		WHERE P.rownumber = 2





-- 로그인
SELECT MEMBER_NO, MEMBER_ID, MEMBER_NAME
FROM AR_MEMBER
WHERE MEMBER_ID = ''
AND MEMBER_PW = '';



-- 회원 가입
INSERT INTO AR_MEMBER 
VALUES(SEQ_MEMBER_NO.NEXTVAL, ?, ?, ?, DEFAULT);

INSERT INTO AR_MEMBER 
VALUES(SEQ_MEMBER_NO.NEXTVAL, 'user01', 'pass01', '유저일', DEFAULT);



COMMIT;


-- 내 어항 조회
SELECT TANK_NO 번호, TANK_NAME 이름, FRESH_SALT "해수/담수", TANK_SIZE "어항 크기" 
, TANK_LIGHT "조명", TANK_FILTER "여과 장치" , TANK_ADDICTIVE 첨가제 
, TANK_SUBSTRATE 바닥재, (SELECT COUNT(*) FROM AR_LIVESTOCK L WHERE L.TANK_NO = T.TANK_NO) 생물수
FROM AR_TANK T
WHERE MEMBER_NO = 1
AND TANK_NO = 1;

--------------------------------------------------------------------------

SELECT MAX(TANK_NO)
		FROM AR_TANK
		WHERE MEMBER_NO = 4
		AND DELETE_FL = 'N';

SELECT BREEDING_NO , BREED_SPECIES1,
			CASE
				WHEN SYSDATE - START_DATE < 1/24/60
				THEN FLOOR((SYSDATE - START_DATE)*24*60*60) || '초 전'
				WHEN SYSDATE - START_DATE < 1/24
				THEN FLOOR( (SYSDATE - START_DATE) * 24 * 60) || '분 전'
				WHEN SYSDATE - START_DATE < 1
				THEN FLOOR( (SYSDATE - START_DATE) * 24) || '시간 전'
				WHEN SYSDATE - START_DATE < 7
				THEN FLOOR( (SYSDATE - START_DATE)) || '일 전'
				ELSE TO_CHAR(START_DATE, 'YYYY-MM-DD')
			END START_DATE 
		FROM AR_BREEDING
		WHERE MEMBER_NO = 1;

SELECT BREEDING_NO , BREED_SPECIES1, 
			CASE
				WHEN SYSDATE - START_DATE < 1/24/60
				THEN FLOOR((SYSDATE - START_DATE)*24*60*60) || '초 전'
				WHEN SYSDATE - START_DATE < 1/24
				THEN FLOOR( (SYSDATE - START_DATE) * 24 * 60) || '분 전'
				WHEN SYSDATE - START_DATE < 1
				THEN FLOOR( (SYSDATE - START_DATE) * 24) || '시간 전'
				WHEN SYSDATE - START_DATE < 7
				THEN FLOOR( (SYSDATE - START_DATE)) || '일 전'
				ELSE TO_CHAR(START_DATE, 'YYYY-MM-DD')
			END START_DATE 
		FROM AR_BREEDING
		WHERE MEMBER_NO = 1;
	
	
	

SELECT TANK_NO, LIVESTOCK_NO, LIVESTOCK_SPECIES , LIVESTOCK_NM 
		, LIVESTOCK_PRICE, LIVESTOCK_GENDER , TO_CHAR(DATE_OF_PURCHASE, 'YYYY-MM-DD') 구입일
		FROM AR_LIVESTOCK
		WHERE MEMBER_NO = 4 AND LIFE_OR_DIE_FL = 'L' AND DELETE_FL = 'N'
		ORDER BY TANK_NO, LIVESTOCK_NO;

		
		
SELECT TANK_NO, TODO_NO , TODO_CONTENT , TODO_TERM 
FROM AR_TODO_LIST
WHERE (SYSDATE - TODO_TERM) >= 0
AND CONCLUDED_FL = 'N'
AND MEMBER_NO = 


SELECT TANK_NO, TODO_NO , TODO_CONTENT,
			CASE
				WHEN SYSDATE - TODO_TERM < 1/24/60
				THEN FLOOR((SYSDATE - TODO_TERM)*24*60*60) || '초 지남'
				WHEN SYSDATE - TODO_TERM < 1/24
				THEN FLOOR( (SYSDATE - TODO_TERM) * 24 * 60) || '분 지남'
				WHEN SYSDATE - TODO_TERM < 1
				THEN FLOOR( (SYSDATE - TODO_TERM) * 24) || '시간 지남'
				WHEN SYSDATE - TODO_TERM < 30
				THEN FLOOR( (SYSDATE - TODO_TERM)) || '일 지남'
				ELSE TO_CHAR(TODO_TERM, 'YYYY-MM-DD')
			END TODO_TERM 
FROM AR_TODO_LIST
WHERE (SYSDATE - TODO_TERM) >= 0
AND CONCLUDED_FL = 'N';
		
SELECT SYSDATE - (SYSDATE-2)
FROM DUAL;


SELECT TANK_NO, TODO_NO , TODO_CONTENT ,
			CASE
				WHEN SYSDATE - TODO_TERM < 1/24/60
				THEN FLOOR((SYSDATE - TODO_TERM)*24*60*60) || '초 지남'
				WHEN SYSDATE - TODO_TERM < 1/24
				THEN FLOOR( (SYSDATE - TODO_TERM) * 24 * 60) || '분 지남'
				WHEN SYSDATE - TODO_TERM < 1
				THEN FLOOR( (SYSDATE - TODO_TERM) * 24) || '시간 지남'
				WHEN SYSDATE - TODO_TERM < 30
				THEN FLOOR( (SYSDATE - TODO_TERM)) || '일 지남'
				ELSE TO_CHAR(TODO_TERM, 'YYYY-MM-DD')
			END TODO_TERM
		FROM AR_TODO_LIST
		WHERE (SYSDATE - TODO_TERM) >= 0
		AND CONCLUDED_FL = 'N'
		AND MEMBER_NO = 1
		ORDER BY TODO_NO

















