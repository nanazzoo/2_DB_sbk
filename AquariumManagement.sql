
-- 멤버 테이블 생성

-- 테이블 삭제
DROP TABLE AR_MEMBER; 

-- 테이블 생성
CREATE TABLE AR_MEMBER(
	MEMBER_NO NUMBER PRIMARY KEY,
	MEMBER_ID VARCHAR2(30) NOT NULL,
	MEMBER_PW VARCHAR2(30) NOT NULL,
	MEMBER_NAME VARCHAR(30),
	SECESSION_FL CHAR(2) DEFAULT 'N'
);

-- 컬럼 코멘트
COMMENT ON COLUMN AR_MEMBER.MEMBER_NO IS '회원 번호';
COMMENT ON COLUMN AR_MEMBER.MEMBER_ID IS '회원 아이디';
COMMENT ON COLUMN AR_MEMBER.MEMBER_PW IS '회원 비밀번호';
COMMENT ON COLUMN AR_MEMBER.MEMBER_NAME IS '회원 이름';
COMMENT ON COLUMN AR_MEMBER.MEMBER_NAME IS '회원 탈퇴 여부';

-- 조회
SELECT * FROM AR_MEMBER;

-- MEMBER_NO 시퀀스 생성
CREATE SEQUENCE SEQ_MEMBER_NO;
DROP SEQUENCE SEQ_MEMBER_NO;

-- 회원 샘플 테이터 삽입
INSERT INTO AR_MEMBER 
VALUES(SEQ_MEMBER_NO.NEXTVAL, 'user01', 'pass01', '유저일', DEFAULT);
INSERT INTO AR_MEMBER 
VALUES(SEQ_MEMBER_NO.NEXTVAL, 'user02', 'pass02', '유저이', DEFAULT);
INSERT INTO AR_MEMBER 
VALUES(SEQ_MEMBER_NO.NEXTVAL, 'user03', 'pass03', '유저삼', DEFAULT);
INSERT INTO AR_MEMBER 
VALUES(SEQ_MEMBER_NO.NEXTVAL, 'user04', 'pass04', '유저사', DEFAULT);
INSERT INTO AR_MEMBER 
VALUES(SEQ_MEMBER_NO.NEXTVAL, 'user05', 'pass05', '유저오', DEFAULT);

-------------------------------------------------------------------------

-- 어항 정보 테이블 생성

-- 테이블 삭제
DROP TABLE AR_TANK;

-- 테이블 생성
CREATE TABLE AR_TANK(
	MEMBER_NO NUMBER REFERENCES AR_MEMBER,
	TANK_NO NUMBER,
	TANK_NAME VARCHAR2(30) NOT NULL,
	FRESH_SALT CHAR(2) DEFAULT 'S',
	TANK_SIZE VARCHAR2(50) NOT NULL,
	TANK_LIGHT VARCHAR2(100),
	TANK_FILTER VARCHAR2(100),
	TANK_ADDICTIVE VARCHAR2(100),
	TANK_SUBSTRATE VARCHAR2(50),
	CONSTRAINT PK_MEMBER_TANK PRIMARY KEY(MEMBER_NO, TANK_NO));

ALTER TABLE AR_TANK ADD CONSTRAINT TANK_NO_U UNIQUE(TANK_NO);

-- 컬럼 코멘트
COMMENT ON COLUMN AR_TANK.MEMBER_NO IS '회원 번호';
COMMENT ON COLUMN AR_TANK.TANK_NO IS '어항 번호';
COMMENT ON COLUMN AR_TANK.TANK_NAME IS '어항 이름';
COMMENT ON COLUMN AR_TANK.FRESH_SALT IS '어항 해수/담수 여부';
COMMENT ON COLUMN AR_TANK.TANK_SIZE IS '어항 크기';
COMMENT ON COLUMN AR_TANK.TANK_LIGHT IS '어항 조명';
COMMENT ON COLUMN AR_TANK.TANK_FILTER IS '어항 여과장치';
COMMENT ON COLUMN AR_TANK.TANK_ADDICTIVE IS '어항 첨가제';
COMMENT ON COLUMN AR_TANK.TANK_SUBSTRATE IS '어항 바닥재';


SELECT * FROM AR_TANK;

SELECT TANK_NO, TANK_NAME
		FROM AR_TANK
		WHERE MEMBER_NO = 1;

	
-- 어항 샘플 데이터 생성
	
INSERT INTO AR_TANK 
VALUES(1, 1, '내어항1', DEFAULT, '45큐브', 'K7 PRO', '하단섬프', '제오박, CV', '산호사');
INSERT INTO AR_TANK 
VALUES(1, (SELECT MAX(TANK_NO) FROM AR_TANK WHERE MEMBER_NO = '1')+1, '내어항2', DEFAULT, '35큐브', '썬라이트', '내부배면', '마이크로박터', '산호사');
INSERT INTO AR_TANK 
VALUES(2, 1, '내어항1', DEFAULT, '60큐브', '라데온', '하단섬프', '제오박, CV', '산호사');
INSERT INTO AR_TANK 
VALUES(2, (SELECT MAX(TANK_NO) FROM AR_TANK WHERE MEMBER_NO = '2')+1, '내어항2', DEFAULT, '4자어항', '오펙', '하단섬프', '제오빗 시스템', 'KZ 아라고나이트');
INSERT INTO AR_TANK 
VALUES(3, 1, '내어항1', DEFAULT, '2자', 'K7 PRO', '하단섬프', '마이크로박터, 바이오퓨엘', '다크캐러빅');

SELECT MAX(TANK_NO) FROM AR_TANK WHERE MEMBER_NO = '2'
------------------------------------------------------------------------------------------

-- 생물 테이블 생성

-- 생물 테이블 삭제
DROP TABLE AR_LIVESTOCK;

-- 생물 테이블 생성
CREATE TABLE AR_LIVESTOCK(
	MEMBER_NO NUMBER,
	TANK_NO NUMBER,
	LIVESTOCK_NO NUMBER,
	LIVESTOCK_SPECIES VARCHAR(30)NOT NULL,
	LIVESTOCK_NM VARCHAR2(30),
	LIVESTOCK_PRICE NUMBER,
	LIVESTOCK_GENDER CHAR(1) CHECK(LIVESTOCK_GENDER IN('F', 'M', NULL)),
	DATE_OF_PURCHASE DATE DEFAULT SYSDATE+7,
	LIFE_OR_DIE_FL CHAR(1) DEFAULT 'L' CHECK(LIFE_OR_DIE_FL IN('L', 'D')),
	CONSTRAINT TANK_LIVESTOCK_PK PRIMARY KEY(MEMBER_NO, TANK_NO, LIVESTOCK_NO),
	CONSTRAINT FK_LIVESTOCK FOREIGN KEY(MEMBER_NO, TANK_NO)
	REFERENCES AR_TANK(MEMBER_NO, TANK_NO)
);

-- 컬럼 코멘트
COMMENT ON COLUMN AR_LIVESTOCK.MEMBER_NO IS '회원 번호';
COMMENT ON COLUMN AR_LIVESTOCK.TANK_NO IS '어항 번호';
COMMENT ON COLUMN AR_LIVESTOCK.LIVESTOCK_NO IS '생물 번호';
COMMENT ON COLUMN AR_LIVESTOCK.LIVESTOCK_SPECIES IS '생물 종류';
COMMENT ON COLUMN AR_LIVESTOCK.LIVESTOCK_NM IS '생물 이름';
COMMENT ON COLUMN AR_LIVESTOCK.LIVESTOCK_PRICE IS '생물 가격';
COMMENT ON COLUMN AR_LIVESTOCK.LIVESTOCK_GENDER IS '생물 성별';
COMMENT ON COLUMN AR_LIVESTOCK.DATE_OF_PURCHASE IS '생물 구입일';
COMMENT ON COLUMN AR_LIVESTOCK.LIFE_OR_DIE_FL IS '생물 생사 여부';

SELECT * FROM AR_LIVESTOCK;


-- 생물 샘플 데이터 삽입
INSERT INTO AR_LIVESTOCK 
VALUES(1, 1, 1, '물고기', '니모', 10000, 'F', SYSDATE, DEFAULT);
INSERT INTO AR_LIVESTOCK 
VALUES(1, 1, 2, '물고기', '옐로우탱', 60000, NULL, SYSDATE, DEFAULT);
INSERT INTO AR_LIVESTOCK 
VALUES(2, 1, 1, '물고기', '옐로우탱', 60000, NULL, SYSDATE, DEFAULT);

-- 시퀀스 사용 X 서브쿼리로 제일 큰 TANK_NO + 1  이런 식으로
SELECT MAX(TANK_NO) FROM AR_TANK WHERE MEMBER_NO = '2' +1

------------------------------------------------------------------------------

-- 물성치 테이블 생성

DROP TABLE AR_PARAMETER;

CREATE TABLE AR_PARAMETER(
	MEMBER_NO NUMBER,
	PARAM_TEMP NUMBER,
	PARAM_NO3 NUMBER,
	PARAM_PO4 NUMBER,
	PARAM_KH NUMBER,
	PARAM_Ca NUMBER,
	PARAM_Mg NUMBER,
	REG_DATE DATE DEFAULT SYSDATE,
	CONSTRAINT PARAM_PK PRIMARY KEY(MEMBER_NO, REG_DATE)
);

COMMENT ON COLUMN AR_PARAMETER.MEMBER_NO IS '회원 번호';
COMMENT ON COLUMN AR_PARAMETER.PARAM_TEMP IS '온도';
COMMENT ON COLUMN AR_PARAMETER.PARAM_NO3 IS '질산염';
COMMENT ON COLUMN AR_PARAMETER.PARAM_PO4 IS '인산염';
COMMENT ON COLUMN AR_PARAMETER.PARAM_KH IS '경도';
COMMENT ON COLUMN AR_PARAMETER.PARAM_Ca IS '칼슘';
COMMENT ON COLUMN AR_PARAMETER.PARAM_Mg IS '마그네슘';
COMMENT ON COLUMN AR_PARAMETER.REG_DATE IS '등록일';

SELECT * FROM AR_PARAMETER
ORDER BY REG_DATE DESC;

-- 샘플 데이터 삽입
INSERT INTO AR_PARAMETER
VALUES(1, 26, 10, 0.01, 7.4, 400, 1350, DEFAULT);

INSERT INTO AR_PARAMETER
VALUES(1, 26, 12, 0.01, 7.6, 410, 1300, SYSDATE -1);


----------------------------------------------------------------------------------

-- 할 일 테이블 생성

DROP TABLE AT_TODO_LIST;

CREATE TABLE AR_TODO_LIST(
	MEMBER_NO NUMBER,
	TODO_NO NUMBER,
	TODO_CONTENT VARCHAR2(200) NOT NULL,
	REG_DATE DATE DEFAULT SYSDATE,
	TODO_TERM DATE DEFAULT SYSDATE + 7 NOT NULL,
	CONCLUDED_FL CHAR(1) DEFAULT 'N' CHECK(CONCLUDED_FL IN('Y', 'N')),
	CONSTRAINT TODO_LIST_PK PRIMARY KEY(MEMBER_NO, TODO_NO)
);

COMMENT ON COLUMN AR_TODO_LIST.MEMBER_NO IS '회원 번호';
COMMENT ON COLUMN AR_TODO_LIST.TODO_NO IS '할 일 번호';
COMMENT ON COLUMN AR_TODO_LIST.TODO_CONTENT IS '할 일 내용';
COMMENT ON COLUMN AR_TODO_LIST.REG_DATE IS '등록일';
COMMENT ON COLUMN AR_TODO_LIST.TODO_TERM IS '완료 기한';
COMMENT ON COLUMN AR_TODO_LIST.CONCLUDED_FL IS '완료 여부';

SELECT * FROM AR_TODO_LIST;

-- 샘플 데이터 삽입
INSERT INTO AR_TODO_LIST VALUES(1, 1, '어항 환수하기', SYSDATE - 3, SYSDATE+4, DEFAULT);
INSERT INTO AR_TODO_LIST VALUES(1, 2, '물고기 밥주기', DEFAULT, DEFAULT, DEFAULT);
INSERT INTO AR_TODO_LIST VALUES(2, 1, '어항 청소하기', SYSDATE - 3, SYSDATE+4, DEFAULT);
INSERT INTO AR_TODO_LIST VALUES(2, 2, '양말필터 갈기', DEFAULT, DEFAULT, DEFAULT);
INSERT INTO AR_TODO_LIST VALUES(3, 1, '수류모터 청소하기', SYSDATE - 3, SYSDATE+4, DEFAULT);
INSERT INTO AR_TODO_LIST VALUES(3, 2, '어항 환수하기', DEFAULT, DEFAULT, DEFAULT);

























-- 로그인
SELECT MEMBER_NO, MEMBER_ID, MEMBER_NAME
FROM AR_MEMBER
WHERE MEMBER_ID = ''
AND MEMBER_PW = '';



-- 회원 가입
INSERT INTO AR_MEMBER 
VALUES(SEQ_MEMBER_NO.NEXTVAL, ?, ?, ?, DEFAULT);

INSERT INTO AR_MEMBER 
VALUES(SEQ_MEMBER_NO.NEXTVAL, 'user01', 'pass01', '유저일', DEFAULT);



COMMIT;



--------------------------------------------------------------------------







