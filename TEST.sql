--SELECT BASIC


-- 1.
SELECT DEPARTMENT_NAME, CATEGORY
FROM TB_DEPARTMENT td;

-- 2.
SELECT DEPARTMENT_NAME || '의 정원은 ' || CAPACITY || ' 명 입니다.' "학과별 정원"
FROM TB_DEPARTMENT;

-- 3.
SELECT  STUDENT_NAME
FROM TB_STUDENT ts 
WHERE ABSENCE_YN = 'Y' 
AND DEPARTMENT_NO = '001'
AND SUBSTR(STUDENT_SSN, 8, 1) = '2';


-- 4.
SELECT STUDENT_NAME
FROM TB_STUDENT ts 
WHERE STUDENT_NO IN('A513079', 'A513090', 'A513091', 'A513110', 'A513119')
ORDER BY 1 DESC;


-- 5.
SELECT DEPARTMENT_NAME, CATEGORY
FROM TB_DEPARTMENT td 
WHERE CAPACITY BETWEEN 20 AND 30;


-- 6.
SELECT PROFESSOR_NAME
FROM TB_PROFESSOR tp 
WHERE DEPARTMENT_NO IS NULL;


-- 7.
SELECT STUDENT_NAME 
FROM TB_STUDENT ts 
WHERE DEPARTMENT_NO IS NULL;


-- 8.
SELECT CLASS_NO
FROM TB_CLASS tc 
WHERE PREATTENDING_CLASS_NO IS NOT NULL;



-- 9.
SELECT DISTINCT CATEGORY
FROM TB_DEPARTMENT td 
ORDER BY 1;


-- 10.
SELECT STUDENT_NO, STUDENT_NAME, STUDENT_SSN
FROM TB_STUDENT ts 
WHERE ABSENCE_YN = 'N'
AND SUBSTR(EXTRACT(YEAR FROM ENTRANCE_DATE), 3, 2) = 02
AND STUDENT_ADDRESS LIKE '%전주%';



--SELECT FUNCTION 

-- 1.
SELECT STUDENT_NO 학번, STUDENT_NAME 이름, ENTRANCE_DATE 입학년도
FROM TB_STUDENT ts
WHERE DEPARTMENT_NO = '002'
ORDER BY 3;


-- 2.
SELECT PROFESSOR_NAME, PROFESSOR_SSN
FROM TB_PROFESSOR tp 
WHERE PROFESSOR_NAME NOT LIKE '___' 



-- 3.
SELECT PROFESSOR_NAME 교수이름, 
--	만 나이 계산하는 방법
	FLOOR(MONTHS_BETWEEN(SYSDATE, TO_DATE(19 || SUBSTR((PROFESSOR_SSN), 1, 6))) / 12) 나이
FROM TB_PROFESSOR tp
WHERE SUBSTR(PROFESSOR_SSN, 8, 1) = '1' 
ORDER BY 2;
--	EXTRACT (YEAR FROM SYSDATE) - 
--	EXTRACT(YEAR FROM TO_DATE(19 || SUBSTR((PROFESSOR_SSN), 1, 6))) 나이


-- 4.
SELECT SUBSTR(PROFESSOR_NAME, 2) 이름
FROM TB_PROFESSOR tp ;


-- 5.
SELECT STUDENT_NO, STUDENT_NAME
FROM TB_STUDENT ts 
WHERE EXTRACT(YEAR FROM ENTRANCE_DATE) - 
	  EXTRACT(YEAR FROM TO_DATE(SUBSTR(STUDENT_SSN, 1, 6), 'RRMMDD')) >= 20;


-- 6.
SELECT TO_CHAR(TO_DATE('2020-12-25'), 'DAY')
FROM DUAL;


-- 7.
SELECT TO_DATE('99/10/11','YY/MM/DD'), TO_DATE('49/10/11', 'YY/MM/DD') FROM DUAL;

SELECT TO_DATE('99/10/11','RR/MM/DD'), TO_DATE('49/10/11', 'RR/MM/DD') FROM DUAL;



-- 8.
SELECT STUDENT_NO, STUDENT_NAME
FROM TB_STUDENT ts 
WHERE STUDENT_NO NOT LIKE 'A%';


-- 9.
SELECT ROUND(SUM(POINT)/COUNT(CLASS_NO), 1) 평점
FROM TB_GRADE tg 
WHERE STUDENT_NO = 'A517178';



-- 10.
SELECT DEPARTMENT_NO 학과번호, COUNT(*) "학생수(명)"
FROM TB_STUDENT
GROUP BY DEPARTMENT_NO 
ORDER BY 1;



-- 11.
SELECT COUNT(*)
FROM TB_STUDENT ts WHERE COACH_PROFESSOR_NO IS NULL;



-- 12.
SELECT SUBSTR(TERM_NO, 1 ,4) 년도, ROUND(AVG(POINT), 1) "년도 별 평점"
FROM TB_GRADE
WHERE STUDENT_NO = 'A112113'
GROUP BY SUBSTR(TERM_NO, 1 ,4)
ORDER BY 1;


-- 13.
-- SUM 사용
SELECT DEPARTMENT_NO 학과코드명, SUM(DECODE(ABSENCE_YN, 'Y', 1, 0)) "휴학생 수"
FROM TB_STUDENT ts 
GROUP BY DEPARTMENT_NO
ORDER BY 1;

-- COUNT 사용
SELECT DEPARTMENT_NO 학과코드명, 
	   COUNT(DECODE(ABSENCE_YN, 'Y', 1)) "휴학생 수" -- COUNT는 NULL을 제외하고 카운트함
FROM TB_STUDENT ts 
GROUP BY DEPARTMENT_NO
ORDER BY 1;


-- 14.
SELECT STUDENT_NAME 동일이름, COUNT(*) "동명인 수" 
FROM TB_STUDENT ts 
GROUP BY STUDENT_NAME
HAVING COUNT(*) >= 2
ORDER BY 1;


-- 15. 
SELECT NVL(SUBSTR(TERM_NO, 1, 4), ' ') 년도, 
	   NVL(SUBSTR(TERM_NO, 5, 2), ' ') 학기,
	   ROUND(AVG(POINT), 1) 평점
FROM TB_GRADE tg 
WHERE STUDENT_NO = 'A112113'
GROUP BY ROLLUP(SUBSTR(TERM_NO, 1, 4), SUBSTR(TERM_NO, 5, 2))
ORDER BY SUBSTR(TERM_NO, 1, 4), SUBSTR(TERM_NO, 5, 2); 
--> ORDER BY 절에 함수 작성 가능
--> 빈칸이 우선순위가 높기때문에 ORDER BY 절 작성시 NVL을 제외한 부분만 작성해야 함

